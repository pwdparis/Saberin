@model ContactManagementApp.Models.Person

@{
    Layout = null;
}
@Scripts.Render("~/bundles/jquery")

@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Person</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", id = "firstName" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", id = "lastName" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @{
            var personalEmailAddress = new ContactManagementApp.Models.EmailAddress();
            personalEmailAddress.EmailType = ContactManagementApp.Models.EmailAddress.EmailAddressType.Personal;
        }

        <label class="control-label col-md-2">Personal Email Address</label>
        <div class="col-md-10">
            @Html.EditorFor(address => personalEmailAddress.EmailAddressContent, new { htmlAttributes = new { @class = "form-control", id = "personalEmailAddress" } })
        </div>
    </div>

    <div class="form-group">
        @{
            var businessEmailAddress = new ContactManagementApp.Models.EmailAddress();
            businessEmailAddress.EmailType = ContactManagementApp.Models.EmailAddress.EmailAddressType.Business;
        }

        <label class="control-label col-md-2">Business Email Address</label>
        <div class="col-md-10">
            @Html.EditorFor(address => businessEmailAddress.EmailAddressContent, new { htmlAttributes = new { @class = "form-control", id = "businessEmailAddress" } })
        </div>

        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Create" class="btn btn-default" onclick="javascript:AddContact();" />
        </div>
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script type="text/javascript">
    function AddContact() {

        var emailAddresses = [];
        var personal;
        if ($('#personalEmailAddress').length) {
            personal = $('#personalEmailAddress').val();
            var personalEmailAddressObj = {
                EmailType: 0,
                EmailAddressContent: personal
            }
            emailAddresses.push(personalEmailAddressObj);
        }

        var business;
        if ($('#businessEmailAddress').length) {
            business = $('#businessEmailAddress').val();
            var businessEmailAddressObj = {
                EmailType: 1, EmailAddressContent: business
            };
            emailAddresses.push(businessEmailAddressObj);
        }

        var dataObject = {
            FirstName: $('#firstName').val(),
            LastName: $('#lastName').val(),
            EmailAddresses: emailAddresses
        }

        $.ajax({
            url: '/Home/NewContact',
            cache: false,
            data: JSON.stringify(dataObject),
            type: 'POST',
            contentType: "application/json",
            success: function (data) {
                alert("You have successfully created a new contact.");
                window.close();
            },
            dataType: "json",
            error: function (errObj) {
                alert("An error occurred attempting to create your new contact. Please try again."); //errObj.result);
            }
        });
    }
</script>


